package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"
	"fmt"

	"github.com/99designs/gqlgen/graphql"
	"github.com/mike-jacks/codecamp-2024-short-video-distributor-backend/graph/model"
)

// Empty is the resolver for the _empty field.
func (r *mutationResolver) Empty(ctx context.Context) (*string, error) {
	panic(fmt.Errorf("not implemented: Empty - _empty"))
}

// AuthorizeYouTube is the resolver for the authorizeYouTube field.
func (r *mutationResolver) AuthorizeYouTube(ctx context.Context, code string) (bool, error) {
	panic(fmt.Errorf("not implemented: AuthorizeYouTube - authorizeYouTube"))
}

// UploadYouTubeVideo is the resolver for the uploadYouTubeVideo field.
func (r *mutationResolver) UploadYouTubeVideo(ctx context.Context, file graphql.Upload, title string, description string) (*model.YouTubeVideo, error) {
	panic(fmt.Errorf("not implemented: UploadYouTubeVideo - uploadYouTubeVideo"))
}

// Empty is the resolver for the _empty field.
func (r *queryResolver) Empty(ctx context.Context) (*string, error) {
	panic(fmt.Errorf("not implemented: Empty - _empty"))
}

// GetYouTubeAuthURL is the resolver for the getYouTubeAuthURL field.
func (r *queryResolver) GetYouTubeAuthURL(ctx context.Context) (*model.YouTubeAuth, error) {
	panic(fmt.Errorf("not implemented: GetYouTubeAuthURL - getYouTubeAuthURL"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
